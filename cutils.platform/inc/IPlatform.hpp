#pragma once

#include "ISerialPort.hpp"

#include <vector>
#include <string>
#include <memory>
#include <cstdint>

namespace CUtils
{

/*******************************************************************************
 *
 ******************************************************************************/
class IPlatform
{
public:
    /***************************************************************************
     *
     **************************************************************************/
    IPlatform();

    /***************************************************************************
     *
     **************************************************************************/
    virtual ~IPlatform() = 0;

    /***************************************************************************
     *
     **************************************************************************/
    virtual bool initialize() = 0;

    /***************************************************************************
     *
     **************************************************************************/
    virtual bool destroy() = 0;

    /***************************************************************************
     * Creates a serial port object.
     **************************************************************************/
    virtual ISerialPort_ createSerialPort() = 0;

    /***************************************************************************
     * Lists the serial ports on the system
     **************************************************************************/
    virtual std::vector<std::string> listSerialPorts() = 0;

    /***************************************************************************
     * Returns the string description of the provided error code.
     **************************************************************************/
    virtual std::string getError(const int32_t &errorCode) = 0;
};

typedef std::shared_ptr<IPlatform> IPlatform_;

/*******************************************************************************
 *
 ******************************************************************************/
IPlatform_ getPlatform();

} // namespace CUtils
