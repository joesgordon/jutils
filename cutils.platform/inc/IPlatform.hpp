#pragma once

#include "ISerialPort.hpp"

#include <vector>
#include <string>
#include <memory>

namespace CUtils
{

class IPlatform
{
public:
    /***************************************************************************
     *
     **************************************************************************/
    IPlatform();

    /***************************************************************************
     *
     **************************************************************************/
    virtual ~IPlatform() = 0;

    /***************************************************************************
     *
     **************************************************************************/
    virtual bool initialize() = 0;

    /***************************************************************************
     *
     **************************************************************************/
    virtual bool destroy() = 0;

    /***************************************************************************
     *
     **************************************************************************/
    virtual ISerialPort_ createSerialPort() = 0;

    /***************************************************************************
     *
     **************************************************************************/
    virtual std::vector<std::string> listSerialPorts() = 0;
};

typedef std::shared_ptr<IPlatform> IPlatform_;

/*******************************************************************************
 *
 ******************************************************************************/
IPlatform_ getPlatform();

} // namespace CUtils
