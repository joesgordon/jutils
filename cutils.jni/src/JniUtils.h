#pragma once

#include <string>

#include <jni.h>

namespace CUtils
{

/*******************************************************************************
 *
 ******************************************************************************/
jlong getInvalidId();

/*******************************************************************************
 *
 ******************************************************************************/
std::string jstring_to_string(JNIEnv *env, const jstring jstr);

/*******************************************************************************
 *
 ******************************************************************************/
jstring string_to_jstring(JNIEnv *env, const std::string &str);

/*******************************************************************************
 *
 ******************************************************************************/
jboolean getBoolean(JNIEnv *env, jobject jobj, const char *name);

/*******************************************************************************
 *
 ******************************************************************************/
void setBoolean(JNIEnv *env, jobject jobj, const char *name, jboolean value);

/*******************************************************************************
 *
 ******************************************************************************/
jint getInt(JNIEnv *env, jobject jobj, const char *name);

/*******************************************************************************
 *
 ******************************************************************************/
void setInt(JNIEnv *env, jobject jobj, const char *name, jint value);

/*******************************************************************************
 *
 ******************************************************************************/
jlong getLong(JNIEnv *env, jobject jobj, const char *name);

/*******************************************************************************
 *
 ******************************************************************************/
void setLong(JNIEnv *env, jobject jobj, const char *name, jlong value);

/*******************************************************************************
 *
 ******************************************************************************/
void *getPointer(JNIEnv *env, jobject jobj, const char *name);

/*******************************************************************************
 *
 ******************************************************************************/
void setPointer(JNIEnv *env, jobject jobj, const char *name, void *value);

/*******************************************************************************
 *
 ******************************************************************************/
template <class T> T *getTPointer(JNIEnv *env, jobject jobj, const char *name)
{
    void *ptr = getPointer(env, jobj, name);
    return static_cast<T *>(ptr);
}

/*******************************************************************************
 *
 ******************************************************************************/
template <class T>
void setTPointer(JNIEnv *env, jobject jobj, const char *name, T *value)
{
    void *ptr = static_cast<void *>(value);
    setPointer(env, jobj, name, ptr);
}

} // namespace CUtils
